#!/bin/bash
# Global pre-commit hook: Secret scanning with gitleaks, trufflehog, and ripsecrets
# Scans only staged files for maximum speed

set -e

# Colors for output
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

echo -e "${YELLOW}🔒 Running secret scanners on staged files...${NC}"

# Get list of staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

if [ -z "$STAGED_FILES" ]; then
    echo -e "${GREEN}✅ No files to scan${NC}"
    exit 0
fi

# Create temp directory for staged content
TEMP_DIR=$(mktemp -d)
trap "rm -rf $TEMP_DIR" EXIT

# Copy staged content to temp directory (excluding .gitleaksignore itself)
echo "$STAGED_FILES" | while read -r file; do
    if [ -f "$file" ] && [ "$file" != ".gitleaksignore" ]; then
        mkdir -p "$TEMP_DIR/$(dirname "$file")"
        git show ":$file" > "$TEMP_DIR/$file" 2>/dev/null || true
    fi
done

FAILED=0

# Run gitleaks (fast, general-purpose)
echo -e "${YELLOW}Running gitleaks...${NC}"
if command -v gitleaks &> /dev/null; then
    GITLEAKS_OUTPUT=$(gitleaks detect --source "$TEMP_DIR" --no-git --no-banner 2>&1 || true)
    if echo "$GITLEAKS_OUTPUT" | grep -qE "[0-9]+ leaks found" && ! echo "$GITLEAKS_OUTPUT" | grep -q "no leaks found"; then
        echo -e "${RED}❌ Gitleaks found potential secrets!${NC}"
        echo "$GITLEAKS_OUTPUT" | grep -A 5 "Finding:"
        FAILED=1
    fi
else
    echo -e "${YELLOW}⚠️  gitleaks not installed${NC}"
fi

# Run trufflehog (deep scanning with verification)
echo -e "${YELLOW}Running trufflehog...${NC}"
if command -v trufflehog &> /dev/null; then
    TRUFFLEHOG_OUTPUT=$(trufflehog filesystem "$TEMP_DIR" --no-update --json 2>/dev/null | jq -s 'length')
    if [ "$TRUFFLEHOG_OUTPUT" -gt 0 ]; then
        echo -e "${RED}❌ TruffleHog found $TRUFFLEHOG_OUTPUT verified secrets!${NC}"
        trufflehog filesystem "$TEMP_DIR" --no-update 2>&1 | head -20
        FAILED=1
    fi
else
    echo -e "${YELLOW}⚠️  trufflehog not installed${NC}"
fi

# Run ripsecrets (fast Rust-based scanning)
echo -e "${YELLOW}Running ripsecrets...${NC}"
if command -v ripsecrets &> /dev/null; then
    RIPSECRETS_OUTPUT=$(ripsecrets "$TEMP_DIR" 2>&1)
    if [ -n "$RIPSECRETS_OUTPUT" ]; then
        echo -e "${RED}❌ Ripsecrets found potential secrets!${NC}"
        echo "$RIPSECRETS_OUTPUT" | head -20
        FAILED=1
    fi
else
    echo -e "${YELLOW}⚠️  ripsecrets not installed${NC}"
fi

if [ $FAILED -eq 1 ]; then
    echo -e "${RED}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo -e "${RED}❌ COMMIT BLOCKED: Secrets detected!${NC}"
    echo -e "${RED}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo -e "${YELLOW}Review the findings above and remove secrets before committing.${NC}"
    echo -e "${YELLOW}To bypass this check (NOT recommended): git commit --no-verify${NC}"
    exit 1
fi

echo -e "${GREEN}✅ No secrets detected - commit allowed${NC}"
exit 0
